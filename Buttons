<h3>Button element (Preferred)</h3>
    <div style="text-align:center; display:inline-block; min-width:300px;">
        <button class="button ripple pulse">Button 
            <span class="button_icon" aria-hidden="true">
                <img src="https://www.envoyhub.com/images/downward_dollar_icon_rev.svg" style="width:auto; height:17px; vertical-align:middle;" />
            </span>
            <div class="loader" role="alert"></div>
        </button>
    </div>
    <p>Pros: Accepts click, space or enter/return and tab events, Will submit form if in form element, Allows nested elements<br />Cons: No native event outside forms<br />Remove "disabled" class with js if you want to keep disabled state until user initiates interaction or after client side validation.<br />Optional classes "ripple", "pulse" and "disabled". Optional icon.</p>
 <h3>Anchor tag</h3>
    <a class="button ripple" href="#0" tabindex="0" role="button">Anchor <span class="button_icon" aria-hidden="true"><img src="https://www.envoyhub.com/images/downward_dollar_icon_rev.svg" style="width:auto; height:17px; vertical-align:middle;" /></span><div class="loader" role="alert"></div></a>
    <p>Pros: Accepts click, enter/return, Allows nested elements<br />Cons: accessibility issues, Tab event requires tabindex="0", Have to prevent default event</p>
    
<h3>Input type submit</h3>
    <input class="pulse" type="submit" name="tsubmit" id="submit-save_button" value="Submit input &rarr;">
    <p>Pros: Accepts click, space, enter/return and tab events, Will submit form if in form element<br />Cons: difficult to combine with icons, Can't use CSS :after</p>

<h3>div element</h3>
    <div class="button ripple" tabindex="0" role="button">Div<div class="loader" role="alert"></div></div>
    <p>Pros: Allows nested elements<br />Cons: accessibility issues, No enter/return, tab event requires tabindex="0", Accepts click only</p>


<!--###############################################################-->
<!-- CSS UNique to elements -->
<!--###############################################################-->
<style>
    input[type=submit], .button {
      -webkit-appearance: none;
      appearance: none;
      display:inline-block;
      font-family:'Assistant',sans-serif;
      text-decoration:none;
      border:0;
      padding: 17px 25px;
      margin:10px;
      text-align: center;
      border-radius: 8px;
      background-color: rgb(var(--button-color-base));
      color: #fff;
      letter-spacing: 0px;
      text-shadow: none;
      font-size: 22px;
      line-height:1;
      font-weight: bold;
      cursor: pointer;
      opacity:1;
      min-width:245px;
      box-shadow: 0px 4px 15px 0px rgba(var(--button-color-base),0.4);
      transition-property: min-width, transform, border-radius;
      transition-duration: 0.0s;
      transition-timing-function: linear;
      transform-origin:center center;
      position:relative;
      overflow:hidden;
}

.button_active_fancy {pointer-events:none; transition-duration: 0.3s; padding:13px; min-width:0px; border-radius:100px; font-size:0;}
.button_active_fancy img {display:none;}
.button.button_active_fancy .loader {display:block;}
.button_darken {filter:brightness(75%); pointer-events:none;}
.button.disabled, input[type=submit].disabled {opacity:0.5!important; filter:blur(0.65px); box-shadow:none!important; pointer-events:none!important; animation:none!important;}

/* click/touch effect */
.ripple {
  transform: translate3d(0, 0, 0);
}
.ripple:after {
  content:'';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
  background-repeat: no-repeat;
  background-position: 50%;
  transform: scale(10, 10);
  opacity: 0;
  transition: transform .5s, opacity 1s;
}
.ripple:active:after {
  transform: scale(0, 0);
  opacity: .3;
  transition: 0s;
}

/* spinner on button click */
.button .loader,
.button .loader:after {
  border-radius: 50%;
  width: 3em;
  height: 3em;
}
.button .loader {
  display:none;
  font-size:10px;
  margin: 0 auto;
  position: relative;
  border-top: 0.4em solid rgba(255, 255, 255, 0.4);
  border-right: 0.4em solid rgba(255, 255, 255, 0.4);
  border-bottom: 0.4em solid rgba(255, 255, 255, 0.4);
  border-left: 0.4em solid #ffffff;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-animation: load8 0.7s infinite linear;
  animation: load8 0.7s infinite linear;
}
@-webkit-keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.pulse {box-shadow:0px 4px 15px 0px rgba(var(--button-color-base),0.4), 0px 0px 0px 0px rgba(var(--button-color-base),0.0); -webkit-animation: pulseButton 3s infinite;}
        
@-webkit-keyframes pulseButton {
 0% {
    transform: scale(1);
    box-shadow:0px 4px 15px 0px rgba(var(--button-color-base),0.4), 0px 0px 0px 0px rgba(var(--button-color-base),0.5);
  }
  30% {
    transform: scale(1);
    box-shadow:0px 4px 15px 0px rgba(var(--button-color-base),0.4), 0px 0px 10px 20px rgba(var(--button-color-base),0.0);
  }
  100% {
    transform: scale(1);
    box-shadow:0px 4px 15px 0px rgba(var(--button-color-base),0.4), 0px 0px 0px 0px rgba(var(--button-color-base),0.0);
  }
}

/* fallback for < IE11. Can't do css vars */
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {  
  input[type=submit], .button {
       background-color: rgb(211,127,0);
  }
}
</style>

<!--###############################################################-->
<!-- jQuery -->
<!--###############################################################-->
<script>
// buttons, anchors, and divs click event. Edit for production to trigger submit event... 
     $('.button').on('click', function(){
        var button = $(this);
        setTimeout(function(){
            button.prop('disabled',true).addClass('button_active_fancy');
        }, 500);
        // for demo only
        setTimeout(function(){
            button.prop('disabled',false).removeClass('button_active_fancy');
        }, 5000);
    })
    // input can't have :after or nested elements so handle differently
    $('input[type=submit]').on('click', function(){
        var button = $(this);
        var button_label = $(this).val();
        button.prop('disabled',true).addClass('button_darken');
        button.val('Saving...');
        // for demo only
        setTimeout(function(){
            button.prop('disabled',false).removeClass('button_darken');
            button.val(button_label);
        }, 5000);
    })
   </script>
